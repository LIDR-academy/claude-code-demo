# ABOUTME: Pytest configuration template for hexagonal architecture migration
# ABOUTME: Copy this to project root as pytest.ini when setting up tests

[tool:pytest]
# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output and reporting
addopts =
    -v
    --strict-markers
    --tb=short
    --cov=api
    --cov-report=html
    --cov-report=term-missing
    --cov-fail-under=80
    --asyncio-mode=auto

# Markers for organizing tests
markers =
    unit: Unit tests (fast, isolated)
    slow: Slow running tests
    asyncio: Async tests requiring event loop
    domain: Domain layer tests (entities, value objects, exceptions)
    application: Application layer tests (use cases)
    infrastructure: Infrastructure layer tests (adapters, external services)
    web: Web layer tests (routers, DTOs, mappers)
    auth: Tests requiring authentication
    integration: Integration tests (requires external dependencies)

# Asyncio configuration
asyncio_mode = auto

# Log configuration
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Warnings
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning

# Coverage configuration
[coverage:run]
source = api
omit =
    */tests/*
    */conftest.py
    */__init__.py
    */migrations/*
    */config/settings.py

[coverage:report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines =
    pragma: no cover
    def __repr__
    def __str__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod
    @abc.abstractmethod
    @overload

[coverage:html]
directory = htmlcov
